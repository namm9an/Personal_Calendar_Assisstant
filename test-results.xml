<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="54" failures="57" skipped="21" tests="249" time="29.797" timestamp="2025-06-10T01:00:56.084136" hostname="Naezi1"><testcase classname="tests.test_agent_endpoint" name="test_detect_intent" time="0.069" /><testcase classname="tests.test_agent_endpoint" name="test_load_prompt_template" time="0.050" /><testcase classname="tests.test_agent_endpoint" name="test_select_llm_model_quota_available" time="0.215"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_agent_endpoint" name="test_select_llm_model_quota_exhausted" time="0.045"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_success" time="0.055"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:170: in test_run_calendar_agent_success
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_unknown_intent" time="0.068"><failure message="assert 401 == 400&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:204: in test_run_calendar_agent_unknown_intent
    assert response.status_code == 400
E   assert 401 == 400
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_llm_fallback" time="0.035"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:222: in test_run_calendar_agent_llm_fallback
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_tool_error" time="0.038"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:260: in test_run_calendar_agent_tool_error
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_health_check" time="0.059" /><testcase classname="tests.test_agent_endpoint" name="test_intent_detection" time="0.065"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:296: in test_intent_detection
    assert response.status_code == 200
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_response_creation" time="0.038"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code">tests\test_agent_endpoint.py:309: in test_agent_response_creation
    assert response.status_code == 200
E   assert 500 == 200
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_error_handling" time="0.064"><failure message="assert 422 == 400&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:320: in test_agent_error_handling
    assert response.status_code == 400
E   assert 422 == 400
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_context_management" time="0.061"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code">tests\test_agent_endpoint.py:331: in test_agent_context_management
    assert response1.status_code == 200
E   assert 500 == 200
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_prompt_templates" time="0.072" /><testcase classname="tests.test_agent_endpoint" name="test_agent_logging" time="0.060" /><testcase classname="tests.test_agent_endpoint" name="test_agent_rate_limiting" time="0.038"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:372: in test_agent_rate_limiting
    assert response.status_code == 200
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_happy_path[google]" time="0.071" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_happy_path[microsoft]" time="0.054" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_invalid_provider" time="0.047" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_user_not_found" time="0.040"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo.py:242: in test_list_events_tool_user_not_found
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_google_missing_credentials" time="0.070"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo.py:269: in test_list_events_tool_google_missing_credentials
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_microsoft_success" time="0.049"><failure message="AssertionError: assert 1 == 2&#10; +  where 1 = len([EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')])&#10; +    where [EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')] = ListEventsOutput(events=[EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')]).events">tests\test_calendar_tool_wrappers_mongo.py:302: in test_list_events_tool_microsoft_success
    assert len(output.events) == 2
E   AssertionError: assert 1 == 2
E    +  where 1 = len([EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')])
E    +    where [EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')] = ListEventsOutput(events=[EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123')]).events</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_transient_error" time="0.027" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_permanent_error" time="0.029"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo.py:348: in test_list_events_tool_permanent_error
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_google_success" time="0.028" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_microsoft_success" time="0.043" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_invalid_duration" time="0.061"><failure message="pydantic_core._pydantic_core.ValidationError: 1 validation error for FreeSlotsInput&#10;duration_minutes&#10;  Value error, Duration must be positive [type=value_error, input_value=-10, input_type=int]&#10;    For further information visit https://errors.pydantic.dev/2.4/v/value_error">tests\test_calendar_tool_wrappers_mongo.py:424: in test_find_free_slots_tool_invalid_duration
    await find_free_slots_tool(FreeSlotsInput(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for FreeSlotsInput
E   duration_minutes
E     Value error, Duration must be positive [type=value_error, input_value=-10, input_type=int]
E       For further information visit https://errors.pydantic.dev/2.4/v/value_error</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_transient_error" time="0.032" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_permanent_error" time="0.031"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo.py:478: in test_find_free_slots_tool_permanent_error
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_google_success" time="0.048" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_missing_required_fields" time="0.057" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_conflict" time="0.036"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo.py:555: in test_create_event_tool_conflict
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_reschedule_event_tool_happy_path[google]" time="0.071" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_reschedule_event_tool_happy_path[microsoft]" time="0.064" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_cancel_event_tool_happy_path[google]" time="0.069" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_cancel_event_tool_happy_path[microsoft]" time="0.056" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_happy_path[google]" time="0.084" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_happy_path[microsoft]" time="0.064" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_invalid_provider" time="0.042" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_user_not_found" time="0.060"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_fixed.py:278: in test_list_events_tool_user_not_found
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_google_missing_credentials" time="0.052"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_fixed.py:305: in test_list_events_tool_google_missing_credentials
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_microsoft_success" time="0.057" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_transient_error" time="0.060" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_list_events_tool_permanent_error" time="0.060" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_find_free_slots_tool_google_success" time="0.037" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_find_free_slots_tool_microsoft_success" time="0.034" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_find_free_slots_tool_invalid_duration" time="0.040"><failure message="pydantic_core._pydantic_core.ValidationError: 1 validation error for FreeSlotsInput&#10;duration_minutes&#10;  Value error, Duration must be positive [type=value_error, input_value=-10, input_type=int]&#10;    For further information visit https://errors.pydantic.dev/2.4/v/value_error">tests\test_calendar_tool_wrappers_mongo_fixed.py:459: in test_find_free_slots_tool_invalid_duration
    await find_free_slots_tool(FreeSlotsInput(
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for FreeSlotsInput
E   duration_minutes
E     Value error, Duration must be positive [type=value_error, input_value=-10, input_type=int]
E       For further information visit https://errors.pydantic.dev/2.4/v/value_error</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_find_free_slots_tool_transient_error" time="0.064" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_find_free_slots_tool_permanent_error" time="0.037" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_create_event_tool_google_success" time="0.034" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_create_event_tool_missing_required_fields" time="0.036" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_create_event_tool_conflict" time="0.036" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_reschedule_event_tool_happy_path[google]" time="0.057" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_reschedule_event_tool_happy_path[microsoft]" time="0.052" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_cancel_event_tool_happy_path[google]" time="0.063" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_fixed" name="test_cancel_event_tool_happy_path[microsoft]" time="0.077" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_happy_path[google]" time="0.065"><failure message="AssertionError: assert 'Mock Google Event' in ['Test Event 1', 'Test Event 2', 'Mock Event']&#10; +  where 'Mock Google Event' = EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123').summary">tests\test_calendar_tool_wrappers_mongo_new.py:94: in test_list_events_tool_happy_path
    assert event.summary in ["Test Event 1", "Test Event 2", "Mock Event"]
E   AssertionError: assert 'Mock Google Event' in ['Test Event 1', 'Test Event 2', 'Mock Event']
E    +  where 'Mock Google Event' = EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123').summary</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_happy_path[microsoft]" time="0.064"><failure message="AssertionError: assert 'Mock MS Event' in ['Test Event 1', 'Test Event 2', 'Mock Event']&#10; +  where 'Mock MS Event' = EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123').summary">tests\test_calendar_tool_wrappers_mongo_new.py:94: in test_list_events_tool_happy_path
    assert event.summary in ["Test Event 1", "Test Event 2", "Mock Event"]
E   AssertionError: assert 'Mock MS Event' in ['Test Event 1', 'Test Event 2', 'Mock Event']
E    +  where 'Mock MS Event' = EventSchema(id='mock_ms_event_1', summary='Mock MS Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[], html_link='https://outlook.office.com/calendar/item/123').summary</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_invalid_provider" time="0.039" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_user_not_found" time="0.027"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_new.py:115: in test_list_events_tool_user_not_found
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_google_missing_credentials" time="0.068"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_new.py:138: in test_list_events_tool_google_missing_credentials
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_microsoft_success" time="0.052" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_transient_error" time="0.056"><failure message="AssertionError: assert 2 == 1&#10; +  where 2 = len([EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')])&#10; +    where [EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')] = ListEventsOutput(events=[EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')]).events">tests\test_calendar_tool_wrappers_mongo_new.py:197: in test_list_events_tool_transient_error
    assert len(output.events) == 1
E   AssertionError: assert 2 == 1
E    +  where 2 = len([EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')])
E    +    where [EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')] = ListEventsOutput(events=[EventSchema(id='mock_google_event_1', summary='Mock Google Event', start='2023-01-01T12:00:00+00:00', end='2023-01-01T13:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=123'), EventSchema(id='mock_google_event_2', summary='Another Mock Event', start='2023-01-01T14:00:00+00:00', end='2023-01-01T15:00:00+00:00', description='', location='', attendees=[AttendeeSchema(email='test2@example.com', name='', response_status=None)], html_link='https://calendar.google.com/event?id=124')]).events</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_permanent_error" time="0.036" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_google_success" time="0.034" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_microsoft_success" time="0.034" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_invalid_duration" time="0.052" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_transient_error" time="0.033" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_permanent_error" time="0.042" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_google_success" time="0.056" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_missing_required_fields" time="0.047" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_conflict" time="0.064" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_reschedule_event_tool_happy_path[google]" time="0.046" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_reschedule_event_tool_happy_path[microsoft]" time="0.052" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_cancel_event_tool_happy_path[google]" time="0.054" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_cancel_event_tool_happy_path[microsoft]" time="0.047" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events" time="0.029" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events_empty" time="0.029" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_find_free_slots" time="0.050" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events_error" time="0.044" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_create_event" time="0.033" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_create_event_error" time="0.052" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_update_event" time="0.058" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_update_event_error" time="0.050" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_delete_event" time="0.060" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_delete_event_error" time="0.033" /><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_authorization_url" time="0.065"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'&quot;">tests\test_google_oauth.py:21: in google_oauth_service
    with patch("app.services.google_oauth.settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_token_exchange" time="0.067"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'&quot;">tests\test_google_oauth.py:21: in google_oauth_service
    with patch("app.services.google_oauth.settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_token_exchange_error" time="0.033"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'&quot;">tests\test_google_oauth.py:21: in google_oauth_service
    with patch("app.services.google_oauth.settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_refresh_token" time="0.061"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'&quot;">tests\test_google_oauth.py:21: in google_oauth_service
    with patch("app.services.google_oauth.settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_refresh_token_error" time="0.056"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'&quot;">tests\test_google_oauth.py:21: in google_oauth_service
    with patch("app.services.google_oauth.settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'settings'</error></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check" time="0.034" /><testcase classname="tests.test_health_and_rate_limiting" name="test_simple_health_probe" time="0.058" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe" time="0.001"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:28: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe_mongodb_failure" time="0.001"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:45: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe_redis_failure" time="0.002"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:58: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_agent_health_check" time="0.001"><skipped type="pytest.skip" message="Endpoint not found">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:71: Endpoint not found</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limiting" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:78: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limit_reset" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:102: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_different_endpoints_rate_limits" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:108: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limit_headers" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:114: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check_dependencies" time="0.001"><skipped type="pytest.skip" message="Endpoint not implemented yet">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:120: Endpoint not implemented yet</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check_metrics" time="0.002"><skipped type="pytest.skip" message="Endpoint not implemented yet">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:126: Endpoint not implemented yet</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_success" time="0.057" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_db_failure" time="0.064" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_redis_failure" time="0.057" /><testcase classname="tests.test_health_and_rate_limiting" name="test_healthz_rate_limit" time="0.001"><skipped type="pytest.skip" message="Rate limiting not implemented for health endpoints">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:202: Rate limiting not implemented for health endpoints</skipped></testcase><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_basic_intent_detection" time="0.053"><failure message="assert False&#10; +  where False = all(&lt;generator object TestIntentDetection.test_basic_intent_detection.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001408A2B8BA0&gt;)">tests\test_intent_and_prompt.py:60: in test_basic_intent_detection
    assert all(
E   assert False
E    +  where False = all(&lt;generator object TestIntentDetection.test_basic_intent_detection.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001408A2B8BA0&gt;)</failure></testcase><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_ambiguous_intent_detection" time="0.055"><failure message="assert 0.9 &lt; 0.8">tests\test_intent_and_prompt.py:81: in test_ambiguous_intent_detection
    assert result["confidence"] &lt; 0.8  # Lower confidence for ambiguous cases
E   assert 0.9 &lt; 0.8</failure></testcase><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_entity_extraction" time="0.036"><failure message="assert False&#10; +  where False = all(&lt;generator object TestIntentDetection.test_entity_extraction.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001408A2BB8B0&gt;)">tests\test_intent_and_prompt.py:106: in test_entity_extraction
    assert all(
E   assert False
E    +  where False = all(&lt;generator object TestIntentDetection.test_entity_extraction.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001408A2BB8B0&gt;)</failure></testcase><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_error_handling" time="0.048"><failure message="Failed: DID NOT RAISE &lt;class 'ValueError'&gt;">tests\test_intent_and_prompt.py:121: in test_error_handling
    with pytest.raises(ValueError):
E   Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</failure></testcase><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_loading" time="0.040" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_variables" time="0.028" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_missing_variables" time="0.026" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_validation" time="0.058"><failure message="AssertionError: assert not True&#10; +  where True = &lt;bound method PromptTemplates.validate_template of &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;&gt;('Schedule a meeting with {participant} at {time')&#10; +    where &lt;bound method PromptTemplates.validate_template of &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;&gt; = &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;.validate_template">tests\test_intent_and_prompt.py:175: in test_template_validation
    assert not prompt_templates.validate_template(invalid_template)
E   AssertionError: assert not True
E    +  where True = &lt;bound method PromptTemplates.validate_template of &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;&gt;('Schedule a meeting with {participant} at {time')
E    +    where &lt;bound method PromptTemplates.validate_template of &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;&gt; = &lt;app.agent.prompt_templates.PromptTemplates object at 0x000001408A0DDBD0&gt;.validate_template</failure></testcase><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_caching" time="0.072" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_updates" time="0.037" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_events" time="0.055" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_events_error" time="0.041" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_create_event" time="0.046" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_create_event_error" time="0.048" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_update_event" time="0.047" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_update_event_error" time="0.039" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_delete_event" time="0.039" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_delete_event_error" time="0.057" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_calendars" time="0.049" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_calendars_error" time="0.033" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_get_free_slots" time="0.030" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_get_free_slots_error" time="0.031" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_authorization_url" time="0.063" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_exchange_code_for_token" time="0.092" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_exchange_code_for_token_error" time="0.071" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_user_tokens" time="0.076" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_user_tokens_invalid_data" time="0.097" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_tokens" time="0.081" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_tokens_refresh" time="0.090" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_state" time="0.094" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_validate_state" time="0.066" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_validate_state_invalid" time="0.063" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_token" time="0.083" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_mongo_client_connection" time="0.011"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_insert_user_document" time="0.007"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_update_event_document" time="0.009"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_delete_user_document" time="0.007"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_session_management" time="0.010"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_agent_log_operations" time="0.009"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_event_validation" time="0.009"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_user_validation" time="0.015"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_session_validation" time="0.008"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_user_model" time="0.052"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_event_model" time="0.042"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_session_model" time="0.041"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_agent_log_model" time="0.029"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_user_validation" time="0.041"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_event_validation" time="0.034"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_session_validation" time="0.055"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_agent_log_validation" time="0.035"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_user" time="0.027"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_by_email" time="0.007"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_event" time="0.004"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_events" time="0.005"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_session" time="0.005"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_active_session" time="0.006"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_agent_log" time="0.004"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_agent_logs" time="0.003"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_mongodb_integration" name="test_error_handling" time="0.004"><error message="failed on setup with &quot;TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.&quot;">tests\test_mongodb_integration.py:43: in repository
    repo = MongoRepository(test_db)
src\repositories\mongodb_repository.py:176: in __init__
    self.db = client.get_database("calendar_db")
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\motor\core.py:987: in __call__
    raise TypeError(
E   TypeError: MotorCollection object is not callable. If you meant to call the 'get_database' method on a MotorCollection object it is failing because no such method exists.</error></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_list_events" time="0.062"><failure message="TypeError: object of type 'coroutine' has no len()">tests\test_service_mocks.py:10: in test_mock_google_service_list_events
    assert len(events) == 2
E   TypeError: object of type 'coroutine' has no len()</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_find_free_slots" time="0.063"><failure message="TypeError: object of type 'coroutine' has no len()">tests\test_service_mocks.py:17: in test_mock_google_service_find_free_slots
    assert len(slots) == 2
E   TypeError: object of type 'coroutine' has no len()</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_create_event" time="0.052"><failure message="assert False&#10; +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x0000014089AC8E40&gt;, dict)">tests\test_service_mocks.py:25: in test_mock_google_service_create_event
    assert isinstance(event, dict)
E   assert False
E    +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x0000014089AC8E40&gt;, dict)</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_update_event" time="0.044"><failure message="assert False&#10; +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408A0867A0&gt;, dict)">tests\test_service_mocks.py:33: in test_mock_google_service_update_event
    assert isinstance(event, dict)
E   assert False
E    +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408A0867A0&gt;, dict)</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_delete_event" time="0.044"><failure message="assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3B7D80&gt; is True">tests\test_service_mocks.py:38: in test_mock_google_service_delete_event
    assert result is True
E   assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3B7D80&gt; is True</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_list_events" time="0.050"><failure message="TypeError: object of type 'coroutine' has no len()">tests\test_service_mocks.py:44: in test_mock_microsoft_service_list_events
    assert len(events) == 1
E   TypeError: object of type 'coroutine' has no len()</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_find_free_slots" time="0.041"><failure message="TypeError: object of type 'coroutine' has no len()">tests\test_service_mocks.py:51: in test_mock_microsoft_service_find_free_slots
    assert len(slots) == 1
E   TypeError: object of type 'coroutine' has no len()</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_create_event" time="0.041"><failure message="assert False&#10; +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D0BA0&gt;, dict)">tests\test_service_mocks.py:59: in test_mock_microsoft_service_create_event
    assert isinstance(event, dict)
E   assert False
E    +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D0BA0&gt;, dict)</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_update_event" time="0.043"><failure message="assert False&#10; +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D12A0&gt;, dict)">tests\test_service_mocks.py:67: in test_mock_microsoft_service_update_event
    assert isinstance(event, dict)
E   assert False
E    +  where False = isinstance(&lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D12A0&gt;, dict)</failure></testcase><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_delete_event" time="0.045"><failure message="assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D1310&gt; is True">tests\test_service_mocks.py:72: in test_mock_microsoft_service_delete_event
    assert result is True
E   assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x000001408B3D1310&gt; is True</failure></testcase><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt" time="0.056" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_special_chars" time="0.047" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_unicode" time="0.032" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_long_token" time="0.066" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_null_and_empty_strings" time="0.028" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_invalid_encrypted_token" time="0.028" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_different_keys" time="0.033" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_same_key_different_instances" time="0.042" /><testcase classname="tests.test_tools_simple" name="test_list_events_tool_success" time="0.044" /><testcase classname="tests.test_tools_simple" name="test_list_events_tool_user_not_found" time="0.042"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_tools_simple.py:124: in test_list_events_tool_user_not_found
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_tools_simple" name="test_find_free_slots_tool_success" time="0.071" /><testcase classname="tests.test_tools_simple" name="test_create_event_tool_success" time="0.044" /><testcase classname="tests.integration.test_oauth_flow" name="test_oauth_token_storage" time="0.006"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_list_events_with_tokens" time="0.005"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_create_event_with_tokens" time="0.004"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_find_free_slots_with_tokens" time="0.005"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_reschedule_event_with_tokens" time="0.007"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_cancel_event_with_tokens" time="0.003"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_missing_tokens" time="0.004"><error message="failed on setup with &quot;AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'&quot;">tests\integration\test_oauth_flow.py:26: in oauth_service
    return OAuthService()
src\services\oauth_service.py:28: in __init__
    self.token_encryption = TokenEncryption.get_instance()
E   AttributeError: type object 'TokenEncryption' has no attribute 'get_instance'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_list_events_response_time" time="0.030"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_create_event_response_time" time="0.011"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_concurrent_requests" time="0.007"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_resource_usage" time="0.010"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_bulk_operations" time="0.026"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collection_names'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:362: in setup_test_db
    if collection in await test_db.list_collection_names():
E   AttributeError: 'async_generator' object has no attribute 'list_collection_names'</error></testcase><testcase classname="tests.services.test_calendar_agent" name="test_list_events" time="0.031"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: 2 validation errors for ListEventsInput&#10;start&#10;  Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]&#10;    For further information visit https://errors.pydantic.dev/2.4/v/missing&#10;end&#10;  Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]&#10;    For further information visit https://errors.pydantic.dev/2.4/v/missing">src\services\calendar_agent.py:37: in run
    return await self._handle_list_events(user_id, provider)
src\services\calendar_agent.py:78: in _handle_list_events
    input = ListEventsInput(
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ListEventsInput
E   start
E     Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.4/v/missing
E   end
E     Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.4/v/missing

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:9: in test_list_events
    result = await run_calendar_agent(
src\services\calendar_agent.py:167: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: 2 validation errors for ListEventsInput
E   start
E     Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.4/v/missing
E   end
E     Field required [type=missing, input_value={'provider': 'google', 'user_id': 'test_user'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.4/v/missing</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_find_free_slots" time="0.027"><failure message="AssertionError: assert False&#10; +  where False = isinstance(FreeSlotsOutput(slots=[FreeSlotSchema(start='2023-01-01T12:00:00+00:00', end='2023-01-01T12:30:00+00:00'), FreeSlotSchema(start='2023-01-01T16:00:00+00:00', end='2023-01-01T16:30:00+00:00')]), list)">tests\services\test_calendar_agent.py:26: in test_find_free_slots
    assert isinstance(result["slots"], list)
E   AssertionError: assert False
E    +  where False = isinstance(FreeSlotsOutput(slots=[FreeSlotSchema(start='2023-01-01T12:00:00+00:00', end='2023-01-01T12:30:00+00:00'), FreeSlotSchema(start='2023-01-01T16:00:00+00:00', end='2023-01-01T16:30:00+00:00')]), list)</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_create_event" time="0.042"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: End time must be after start time">src\services\calendar_agent.py:41: in run
    return await self._handle_create_event(text, user_id, provider)
src\services\calendar_agent.py:113: in _handle_create_event
    event = await create_event_tool(input)
src\calendar_tool_wrappers.py:493: in create_event_tool
    raise ToolExecutionError("End time must be after start time")
E   src.core.exceptions.ToolExecutionError: End time must be after start time

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:31: in test_create_event
    result = await run_calendar_agent(
src\services\calendar_agent.py:167: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: End time must be after start time</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_update_event" time="0.301"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: ToolExecutionError.__init__() got an unexpected keyword argument 'original_exception'">src\calendar_tool_wrappers.py:105: in update_event_tool
    existing_event = await calendar_service.get_event(
E   AttributeError: 'GoogleServiceWrapper' object has no attribute 'get_event'. Did you mean: 'create_event'?

During handling of the above exception, another exception occurred:
src\services\calendar_agent.py:43: in run
    return await self._handle_update_event(text, user_id, provider)
src\services\calendar_agent.py:127: in _handle_update_event
    event = await update_event_tool(input)
src\calendar_tool_wrappers.py:150: in update_event_tool
    raise ToolExecutionError(error_msg, original_exception=e)
E   TypeError: ToolExecutionError.__init__() got an unexpected keyword argument 'original_exception'

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:42: in test_update_event
    result = await run_calendar_agent(
src\services\calendar_agent.py:167: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: ToolExecutionError.__init__() got an unexpected keyword argument 'original_exception'</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_delete_event" time="0.054"><failure message="assert False&#10; +  where False = isinstance(DeleteEventOutput(success=True), bool)">tests\services\test_calendar_agent.py:59: in test_delete_event
    assert isinstance(result["success"], bool)
E   assert False
E    +  where False = isinstance(DeleteEventOutput(success=True), bool)</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_reschedule_event" time="0.052"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: End time must be after start time">src\services\calendar_agent.py:41: in run
    return await self._handle_create_event(text, user_id, provider)
src\services\calendar_agent.py:113: in _handle_create_event
    event = await create_event_tool(input)
src\calendar_tool_wrappers.py:493: in create_event_tool
    raise ToolExecutionError("End time must be after start time")
E   src.core.exceptions.ToolExecutionError: End time must be after start time

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:64: in test_reschedule_event
    result = await run_calendar_agent(
src\services\calendar_agent.py:167: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: End time must be after start time</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_cancel_event" time="0.048"><failure message="assert False&#10; +  where False = isinstance(CancelEventOutput(success=True), bool)">tests\services\test_calendar_agent.py:81: in test_cancel_event
    assert isinstance(result["success"], bool)
E   assert False
E    +  where False = isinstance(CancelEventOutput(success=True), bool)</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_invalid_provider" time="0.035" /><testcase classname="tests.services.test_calendar_agent" name="test_invalid_action" time="0.050" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_create" time="0.031" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_list" time="0.038" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_find_slots" time="0.049"><failure message="ValueError: Could not detect intent from input">tests\services\test_intent_detector.py:18: in test_detect_intent_find_slots
    intent, confidence = detect_intent("find free time tomorrow")
src\services\intent_detector.py:37: in detect_intent
    raise ValueError("Could not detect intent from input")
E   ValueError: Could not detect intent from input</failure></testcase><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_update" time="0.049" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_delete" time="0.042" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_reschedule" time="0.080" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_ambiguous" time="0.055"><failure message="AssertionError: assert 'create_event' == 'ambiguous'&#10;  - ambiguous&#10;  + create_event">tests\services\test_intent_detector.py:43: in test_detect_intent_ambiguous
    assert intent == "ambiguous"
E   AssertionError: assert 'create_event' == 'ambiguous'
E     - ambiguous
E     + create_event</failure></testcase><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_unknown" time="0.045" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_date" time="0.046" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_time" time="0.064" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_duration" time="0.034" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_attendees" time="0.047" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_location" time="0.036" /><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_get_user_not_found" time="0.031"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_no_token" time="0.065"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_no_expiry" time="0.057"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_valid_token" time="0.028"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_expired_token" time="0.063"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_refresh_error" time="0.031"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_from_api" time="0.090"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_for_api_create" time="0.054"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_for_api_update" time="0.052"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_validate_event_dates" time="0.036"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_calendars_success" time="0.034"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_calendars_api_error" time="0.038"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_events_success" time="0.046"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_create_event_success" time="0.057"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_get_event_success" time="0.049"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_update_event_success" time="0.052"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_delete_event_success" time="0.052"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_find_free_slots_success" time="0.032"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_validate_free_slot_request" time="0.072"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_generate_auth_url" time="0.423"><failure message="app.core.exceptions.OAuthError: OAuth Error: Failed to generate authorization URL: Unable to get authority configuration for https://login.microsoftonline.com/test_tenant_id. Authority would typically be in a format of https://login.microsoftonline.com/your_tenant Also please double check your tenant name or GUID is correct.">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\msal\authority.py:115: in __init__
    openid_config = tenant_discovery(
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\msal\authority.py:186: in tenant_discovery
    raise ValueError("OIDC Discovery failed on {}. HTTP status: {}, Error: {}".format(
E   ValueError: OIDC Discovery failed on https://login.microsoftonline.com/test_tenant_id/v2.0/.well-known/openid-configuration. HTTP status: 400, Error: {"error":"invalid_tenant","error_description":"AADSTS90002: Tenant 'test_tenant_id' not found. Check to make sure you have the correct tenant ID and are signing into the correct cloud. Check with your subscription administrator, this may happen if there are no active subscriptions for the tenant. Trace ID: 92537400-944a-41fa-abaf-ea0dc98d1c00 Correlation ID: a819a892-0076-47d7-a439-88d0aca152bc Timestamp: 2025-06-09 19:31:24Z","error_codes":[90002],"timestamp":"2025-06-09 19:31:24Z","trace_id":"92537400-944a-41fa-abaf-ea0dc98d1c00","correlation_id":"a819a892-0076-47d7-a439-88d0aca152bc","error_uri":"https://login.microsoftonline.com/error?code=90002"}

During handling of the above exception, another exception occurred:
app\services\ms_oauth.py:64: in get_authorization_url
    app = msal.ConfidentialClientApplication(
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\msal\application.py:529: in __init__
    self.authority = Authority(
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\msal\authority.py:119: in __init__
    raise ValueError(
E   ValueError: Unable to get authority configuration for https://login.microsoftonline.com/test_tenant_id. Authority would typically be in a format of https://login.microsoftonline.com/your_tenant Also please double check your tenant name or GUID is correct.

During handling of the above exception, another exception occurred:
tests\services\test_ms_oauth.py:65: in test_generate_auth_url
    auth_url = ms_oauth_service.get_authorization_url()
app\services\ms_oauth.py:84: in get_authorization_url
    raise OAuthError(f"Failed to generate authorization URL: {str(e)}")
E   app.core.exceptions.OAuthError: OAuth Error: Failed to generate authorization URL: Unable to get authority configuration for https://login.microsoftonline.com/test_tenant_id. Authority would typically be in a format of https://login.microsoftonline.com/your_tenant Also please double check your tenant name or GUID is correct.</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_save_state" time="0.036"><failure message="AssertionError: Expected 'add' to have been called once. Called 0 times.">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:898: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'add' to have been called once. Called 0 times.

During handling of the above exception, another exception occurred:
tests\services\test_ms_oauth.py:83: in test_save_state
    mock_db.add.assert_called_once()
E   AssertionError: Expected 'add' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_valid" time="0.039"><failure message="AssertionError: assert &lt;coroutine object MicrosoftOAuthService.validate_state at 0x000001408B82D930&gt; == 'test-user-id'">tests\services\test_ms_oauth.py:99: in test_validate_state_valid
    assert result == "test-user-id"
E   AssertionError: assert &lt;coroutine object MicrosoftOAuthService.validate_state at 0x000001408B82D930&gt; == 'test-user-id'</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_invalid" time="0.060"><failure message="Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;">tests\services\test_ms_oauth.py:109: in test_validate_state_invalid
    with pytest.raises(HTTPException) as exc_info:
E   Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_expired" time="0.042"><failure message="Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;">tests\services\test_ms_oauth.py:126: in test_validate_state_expired
    with pytest.raises(HTTPException) as exc_info:
E   Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token" time="0.084"><failure message="AttributeError: &lt;module 'app.services.ms_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_oauth.py'&gt; does not have the attribute 'ConfidentialClientApplication'">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1366: in patched
    with self.decoration_helper(patched,
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\contextlib.py:135: in __enter__
    return next(self.gen)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1348: in decoration_helper
    arg = exit_stack.enter_context(patching)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\contextlib.py:492: in enter_context
    result = _cm_type.__enter__(cm)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_oauth.py'&gt; does not have the attribute 'ConfidentialClientApplication'</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token_error" time="0.056"><failure message="AttributeError: &lt;module 'app.services.ms_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_oauth.py'&gt; does not have the attribute 'ConfidentialClientApplication'">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1366: in patched
    with self.decoration_helper(patched,
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\contextlib.py:135: in __enter__
    return next(self.gen)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1348: in decoration_helper
    arg = exit_stack.enter_context(patching)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\contextlib.py:492: in enter_context
    result = _cm_type.__enter__(cm)
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_oauth.py'&gt; does not have the attribute 'ConfidentialClientApplication'</failure></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token_user_not_found" time="0.089"><failure message="Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;">tests\services\test_ms_oauth.py:183: in test_get_token_user_not_found
    with pytest.raises(HTTPException) as exc_info:
E   Failed: DID NOT RAISE &lt;class 'fastapi.exceptions.HTTPException'&gt;</failure></testcase></testsuite></testsuites>