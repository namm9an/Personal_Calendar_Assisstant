<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="36" failures="26" skipped="36" tests="231" time="42.250" timestamp="2025-06-12T23:44:49.055781" hostname="Naezi1"><testcase classname="tests.test_agent_endpoint" name="test_detect_intent" time="0.071" /><testcase classname="tests.test_agent_endpoint" name="test_load_prompt_template" time="0.035" /><testcase classname="tests.test_agent_endpoint" name="test_select_llm_model_quota_available" time="0.066"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_agent_endpoint" name="test_select_llm_model_quota_exhausted" time="0.056"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_success" time="0.093"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:170: in test_run_calendar_agent_success
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_unknown_intent" time="0.291"><failure message="assert 401 == 400&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:204: in test_run_calendar_agent_unknown_intent
    assert response.status_code == 400
E   assert 401 == 400
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_llm_fallback" time="0.072"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:222: in test_run_calendar_agent_llm_fallback
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_run_calendar_agent_tool_error" time="0.065"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests\test_agent_endpoint.py:260: in test_run_calendar_agent_tool_error
    assert response.status_code == 200
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_health_check" time="0.070" /><testcase classname="tests.test_agent_endpoint" name="test_intent_detection" time="0.070"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:296: in test_intent_detection
    assert response.status_code == 200
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_response_creation" time="0.043"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code">tests\test_agent_endpoint.py:309: in test_agent_response_creation
    assert response.status_code == 200
E   assert 500 == 200
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_error_handling" time="0.080"><failure message="assert 422 == 400&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:320: in test_agent_error_handling
    assert response.status_code == 400
E   assert 422 == 400
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_context_management" time="0.070"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code">tests\test_agent_endpoint.py:331: in test_agent_context_management
    assert response1.status_code == 200
E   assert 500 == 200
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code</failure></testcase><testcase classname="tests.test_agent_endpoint" name="test_agent_prompt_templates" time="0.073" /><testcase classname="tests.test_agent_endpoint" name="test_agent_logging" time="0.050" /><testcase classname="tests.test_agent_endpoint" name="test_agent_rate_limiting" time="0.048"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests\test_agent_endpoint.py:372: in test_agent_rate_limiting
    assert response.status_code == 200
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_happy_path[google]" time="0.165"><failure message="src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
E   TypeError: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:305: in test_list_events_tool_happy_path
    result = await list_events_tool(input_data)
src\calendar_tool_wrappers.py:410: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_happy_path[microsoft]" time="0.174"><failure message="src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
E   TypeError: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:305: in test_list_events_tool_happy_path
    result = await list_events_tool(input_data)
src\calendar_tool_wrappers.py:410: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_invalid_provider" time="0.053" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_user_not_found" time="0.091" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_google_missing_credentials" time="0.152" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_permanent_error" time="0.122"><failure message="assert 'Invalid payload' in &quot;Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'&quot;&#10; +  where &quot;Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'&quot; = str(ToolExecutionError(&quot;Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'&quot;))&#10; +    where ToolExecutionError(&quot;Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'&quot;) = &lt;ExceptionInfo ToolExecutionError(&quot;Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'&quot;) tblen=2&gt;.value">tests\test_calendar_tool_wrappers_mongo.py:392: in test_list_events_tool_permanent_error
    assert "Invalid payload" in str(excinfo.value)
E   assert 'Invalid payload' in "Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'"
E    +  where "Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'" = str(ToolExecutionError("Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'"))
E    +    where ToolExecutionError("Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'") = &lt;ExceptionInfo ToolExecutionError("Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'") tblen=2&gt;.value</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_microsoft_success" time="0.121"><failure message="src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
E   TypeError: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:418: in test_list_events_tool_microsoft_success
    output = await list_events_tool(input_data)
src\calendar_tool_wrappers.py:410: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.MicrosoftServiceWrapper.list_events() got an unexpected keyword argument 'time_min'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_list_events_tool_transient_error" time="0.106"><failure message="src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
E   TypeError: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:451: in test_list_events_tool_transient_error
    output = await list_events_tool(input_data)
src\calendar_tool_wrappers.py:410: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_google_success" time="0.101"><failure message="src.core.exceptions.ToolExecutionError: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'">tests\test_calendar_tool_wrappers_mongo.py:101: in find_free_slots
    return await self._service.find_free_slots(start_time=range_start, end_time=range_end, duration_minutes=duration_minutes)
E   TypeError: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:480: in test_find_free_slots_tool_google_success
    output = await find_free_slots_tool(input_data)
src\calendar_tool_wrappers.py:471: in find_free_slots_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_microsoft_success" time="0.099"><failure message="src.core.exceptions.ToolExecutionError: Failed to find free slots: MockMicrosoftService.find_free_slots() got an unexpected keyword argument 'start_time'">tests\test_calendar_tool_wrappers_mongo.py:180: in find_free_slots
    return await self._service.find_free_slots(start_time=range_start, end_time=range_end, duration_minutes=duration_minutes)
E   TypeError: MockMicrosoftService.find_free_slots() got an unexpected keyword argument 'start_time'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:510: in test_find_free_slots_tool_microsoft_success
    output = await find_free_slots_tool(input_data)
src\calendar_tool_wrappers.py:471: in find_free_slots_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to find free slots: MockMicrosoftService.find_free_slots() got an unexpected keyword argument 'start_time'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_invalid_duration" time="0.001"><skipped type="pytest.skip" message="Skipping test for validation errors">D:\Academics\Personal Calendar Assistant\tests\test_calendar_tool_wrappers_mongo.py:515: Skipping test for validation errors</skipped></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_transient_error" time="0.147"><failure message="src.core.exceptions.ToolExecutionError: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'">tests\test_calendar_tool_wrappers_mongo.py:101: in find_free_slots
    return await self._service.find_free_slots(start_time=range_start, end_time=range_end, duration_minutes=duration_minutes)
E   TypeError: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:562: in test_find_free_slots_tool_transient_error
    output = await find_free_slots_tool(input_data)
src\calendar_tool_wrappers.py:471: in find_free_slots_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_find_free_slots_tool_permanent_error" time="0.092" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_google_success" time="0.080"><failure message="src.core.exceptions.ToolExecutionError: Failed to create event: 'str' object has no attribute 'get'">tests\test_calendar_tool_wrappers_mongo.py:113: in create_event
    if isinstance(result.get('start', {}).get('dateTime'), datetime):
E   AttributeError: 'str' object has no attribute 'get'

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo.py:625: in test_create_event_tool_google_success
    output = await create_event_tool(input_data)
src\calendar_tool_wrappers.py:544: in create_event_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to create event: 'str' object has no attribute 'get'</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_missing_required_fields" time="0.001"><skipped type="pytest.skip" message="Skipping test for validation errors">D:\Academics\Personal Calendar Assistant\tests\test_calendar_tool_wrappers_mongo.py:630: Skipping test for validation errors</skipped></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_create_event_tool_conflict" time="0.001"><skipped type="pytest.skip" message="Skipping conflict test due to mocking complexity">D:\Academics\Personal Calendar Assistant\tests\test_calendar_tool_wrappers_mongo.py:651: Skipping conflict test due to mocking complexity</skipped></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_reschedule_event_tool_happy_path[google]" time="0.142" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_reschedule_event_tool_happy_path[microsoft]" time="0.120" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_cancel_event_tool_happy_path[google]" time="0.108" /><testcase classname="tests.test_calendar_tool_wrappers_mongo" name="test_cancel_event_tool_happy_path[microsoft]" time="0.122" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_happy_path[google]" time="0.089" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_happy_path[microsoft]" time="0.109" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_invalid_provider" time="0.060" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_user_not_found" time="0.066"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_new.py:118: in test_list_events_tool_user_not_found
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_google_missing_credentials" time="0.102"><failure message="Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;">tests\test_calendar_tool_wrappers_mongo_new.py:141: in test_list_events_tool_google_missing_credentials
    with pytest.raises(ToolExecutionError) as excinfo:
E   Failed: DID NOT RAISE &lt;class 'src.core.exceptions.ToolExecutionError'&gt;</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_microsoft_success" time="0.079" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_transient_error" time="0.081"><failure message="src.core.exceptions.ToolExecutionError: Connection timed out when listing events. Please try again.">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:2211: in _execute_mock_call
    raise result
E   TimeoutError

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo_new.py:198: in test_list_events_tool_transient_error
    output = await list_events_tool(input_data)
src\calendar_tool_wrappers.py:406: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Connection timed out when listing events. Please try again.</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_list_events_tool_permanent_error" time="0.065" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_google_success" time="0.066" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_microsoft_success" time="0.070" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_invalid_duration" time="0.091" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_transient_error" time="0.055"><failure message="src.core.exceptions.ToolExecutionError: Failed to find free slots: Connection timeout">src\calendar_tool_wrappers.py:426: in find_free_slots_tool
    slots = await calendar_service.find_free_slots(
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:2211: in _execute_mock_call
    raise result
E   TimeoutError

During handling of the above exception, another exception occurred:
tests\test_calendar_tool_wrappers_mongo_new.py:322: in test_find_free_slots_tool_transient_error
    output = await find_free_slots_tool(input_data)
src\calendar_tool_wrappers.py:467: in find_free_slots_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to find free slots: Connection timeout</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_find_free_slots_tool_permanent_error" time="0.056" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_google_success" time="0.052" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_missing_required_fields" time="0.079" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_create_event_tool_conflict" time="0.087"><failure message="NameError: name 'HTTPException' is not defined">tests\test_calendar_tool_wrappers_mongo_new.py:403: in test_create_event_tool_conflict
    create_event=AsyncMock(side_effect=HTTPException(status_code=409, detail="Event conflict"))
E   NameError: name 'HTTPException' is not defined</failure></testcase><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_reschedule_event_tool_happy_path[google]" time="0.088" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_reschedule_event_tool_happy_path[microsoft]" time="0.100" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_cancel_event_tool_happy_path[google]" time="0.092" /><testcase classname="tests.test_calendar_tool_wrappers_mongo_new" name="test_cancel_event_tool_happy_path[microsoft]" time="0.091" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events" time="0.085" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events_empty" time="0.074" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_find_free_slots" time="0.082" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_list_events_error" time="0.104" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_create_event" time="0.100" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_create_event_error" time="0.083" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_update_event" time="0.081" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_update_event_error" time="0.088" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_delete_event" time="0.074" /><testcase classname="tests.test_google_calendar_service.TestGoogleCalendarService" name="test_delete_event_error" time="0.080" /><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_authorization_url" time="0.026"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'&quot;">tests\test_google_oauth.py:75: in google_oauth_service
    with patch("app.services.google_oauth.get_settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_token_exchange" time="0.027"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'&quot;">tests\test_google_oauth.py:75: in google_oauth_service
    with patch("app.services.google_oauth.get_settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_token_exchange_error" time="0.025"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'&quot;">tests\test_google_oauth.py:75: in google_oauth_service
    with patch("app.services.google_oauth.get_settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_refresh_token" time="0.022"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'&quot;">tests\test_google_oauth.py:75: in google_oauth_service
    with patch("app.services.google_oauth.get_settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'</error></testcase><testcase classname="tests.test_google_oauth.TestGoogleOAuthService" name="test_google_refresh_token_error" time="0.028"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'&quot;">tests\test_google_oauth.py:75: in google_oauth_service
    with patch("app.services.google_oauth.get_settings") as mock_settings:
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.google_oauth' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\google_oauth.py'&gt; does not have the attribute 'get_settings'</error></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check" time="0.081" /><testcase classname="tests.test_health_and_rate_limiting" name="test_simple_health_probe" time="0.087" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe" time="0.001"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:28: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe_mongodb_failure" time="0.001"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:45: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readiness_probe_redis_failure" time="0.001"><skipped type="pytest.skip" message="Mock path issues, needs investigation">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:58: Mock path issues, needs investigation</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_agent_health_check" time="0.001"><skipped type="pytest.skip" message="Endpoint not found">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:71: Endpoint not found</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limiting" time="0.002"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:78: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limit_reset" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:102: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_different_endpoints_rate_limits" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:108: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_rate_limit_headers" time="0.001"><skipped type="pytest.skip" message="Requires authentication, will be tested in integration tests">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:114: Requires authentication, will be tested in integration tests</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check_dependencies" time="0.001"><skipped type="pytest.skip" message="Endpoint not implemented yet">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:120: Endpoint not implemented yet</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_health_check_metrics" time="0.001"><skipped type="pytest.skip" message="Endpoint not implemented yet">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:126: Endpoint not implemented yet</skipped></testcase><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_success" time="0.094" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_db_failure" time="0.084" /><testcase classname="tests.test_health_and_rate_limiting" name="test_readyz_endpoint_redis_failure" time="0.098" /><testcase classname="tests.test_health_and_rate_limiting" name="test_healthz_rate_limit" time="0.001"><skipped type="pytest.skip" message="Rate limiting not implemented for health endpoints">D:\Academics\Personal Calendar Assistant\tests\test_health_and_rate_limiting.py:202: Rate limiting not implemented for health endpoints</skipped></testcase><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_basic_intent_detection" time="0.075" /><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_ambiguous_intent_detection" time="0.076" /><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_entity_extraction" time="0.090" /><testcase classname="tests.test_intent_and_prompt.TestIntentDetection" name="test_error_handling" time="0.068" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_loading" time="0.093" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_variables" time="0.077" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_missing_variables" time="0.087" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_validation" time="0.081" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_caching" time="0.053" /><testcase classname="tests.test_intent_and_prompt.TestPromptTemplates" name="test_template_updates" time="0.057" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_events" time="0.071" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_events_error" time="0.076" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_create_event" time="0.059" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_create_event_error" time="0.075" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_update_event" time="0.078" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_update_event_error" time="0.078" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_delete_event" time="0.089" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_delete_event_error" time="0.077" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_calendars" time="0.069" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_list_calendars_error" time="0.060" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_get_free_slots" time="0.054" /><testcase classname="tests.test_microsoft_calendar_service.TestMicrosoftCalendarService" name="test_get_free_slots_error" time="0.059" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_authorization_url" time="0.104" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_exchange_code_for_token" time="0.106" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_exchange_code_for_token_error" time="0.122" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_user_tokens" time="0.128" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_user_tokens_invalid_data" time="0.134" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_tokens" time="0.136" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_tokens_refresh" time="0.114" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_save_state" time="0.095" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_validate_state" time="0.181" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_validate_state_invalid" time="0.092" /><testcase classname="tests.test_microsoft_oauth.TestMicrosoftOAuthService" name="test_get_token" time="0.117" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_mongo_client_connection" time="0.182" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_insert_user_document" time="0.211" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_update_event_document" time="0.226" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_delete_user_document" time="0.188" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_session_management" time="0.188" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_agent_log_operations" time="0.168" /><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_event_validation" time="0.001"><skipped type="pytest.skip" message="MongoDB doesn't validate documents automatically without validation schemas">D:\Academics\Personal Calendar Assistant\tests\test_mongo_models.py:187: MongoDB doesn't validate documents automatically without validation schemas</skipped></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_user_validation" time="0.001"><skipped type="pytest.skip" message="MongoDB doesn't validate documents automatically without validation schemas">D:\Academics\Personal Calendar Assistant\tests\test_mongo_models.py:213: MongoDB doesn't validate documents automatically without validation schemas</skipped></testcase><testcase classname="tests.test_mongo_models.TestMongoDBModels" name="test_session_validation" time="0.002"><skipped type="pytest.skip" message="MongoDB doesn't validate documents automatically without validation schemas">D:\Academics\Personal Calendar Assistant\tests\test_mongo_models.py:238: MongoDB doesn't validate documents automatically without validation schemas</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_user_model" time="0.065"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_event_model" time="0.061"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_session_model" time="0.084"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_agent_log_model" time="0.060"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_user_validation" time="0.066"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_event_validation" time="0.300"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_session_validation" time="0.056"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb.TestMongoDBModels" name="test_agent_log_validation" time="0.085"><skipped type="pytest.skip" message="async def function and no async plugin installed (see warnings)">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:184: async def function and no async plugin installed (see warnings)</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_user" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:59: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_by_email" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:89: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_event" time="0.002"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:97: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_events" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:122: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_session" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:152: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_active_session" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:175: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_create_agent_log" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:202: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_get_user_agent_logs" time="0.001"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:224: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_mongodb_integration" name="test_error_handling" time="0.002"><skipped type="pytest.skip" message="Skipping MongoDB integration tests until PyObjectId validation is fixed">D:\Academics\Personal Calendar Assistant\tests\test_mongodb_integration.py:246: Skipping MongoDB integration tests until PyObjectId validation is fixed</skipped></testcase><testcase classname="tests.test_service_mocks" name="test_mock_google_service_list_events" time="0.030" /><testcase classname="tests.test_service_mocks" name="test_mock_google_service_find_free_slots" time="0.052" /><testcase classname="tests.test_service_mocks" name="test_mock_google_service_create_event" time="0.031" /><testcase classname="tests.test_service_mocks" name="test_mock_google_service_update_event" time="0.034" /><testcase classname="tests.test_service_mocks" name="test_mock_google_service_delete_event" time="0.052" /><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_list_events" time="0.040" /><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_find_free_slots" time="0.037" /><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_create_event" time="0.039" /><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_update_event" time="0.052" /><testcase classname="tests.test_service_mocks" name="test_mock_microsoft_service_delete_event" time="0.034" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt" time="0.064" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_special_chars" time="0.087" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_unicode" time="0.080" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_long_token" time="0.087" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_null_and_empty_strings" time="0.086" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_invalid_encrypted_token" time="0.073" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_different_keys" time="0.066" /><testcase classname="tests.test_token_encryption.TestTokenEncryption" name="test_encrypt_decrypt_with_same_key_different_instances" time="0.094" /><testcase classname="tests.test_tools_simple" name="test_list_events_tool_success" time="0.064" /><testcase classname="tests.test_tools_simple" name="test_list_events_tool_user_not_found" time="0.088" /><testcase classname="tests.test_tools_simple" name="test_find_free_slots_tool_success" time="0.059" /><testcase classname="tests.test_tools_simple" name="test_create_event_tool_success" time="0.090" /><testcase classname="tests.test_tools_simple" name="test_user_model" time="0.108" /><testcase classname="tests.test_tools_simple" name="test_get_calendar_service_mock" time="0.102" /><testcase classname="tests.integration.test_oauth_flow" name="test_oauth_token_storage" time="0.012"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_list_events_with_tokens" time="0.006"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_create_event_with_tokens" time="0.007"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_find_free_slots_with_tokens" time="0.008"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_reschedule_event_with_tokens" time="0.006"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_cancel_event_with_tokens" time="0.008"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.integration.test_oauth_flow" name="test_missing_tokens" time="0.009"><error message="failed on setup with &quot;NameError: name 'TestingSessionLocal' is not defined&quot;">tests\integration\test_oauth_flow.py:31: in test_user
    user = oauth_service.create_or_update_user_tokens(
src\services\oauth_service.py:85: in create_or_update_user_tokens
    db = TestingSessionLocal()
E   NameError: name 'TestingSessionLocal' is not defined</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_list_events_response_time" time="0.033"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collections'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:401: in setup_test_db
    cursor = await test_db.list_collections()
E   AttributeError: 'async_generator' object has no attribute 'list_collections'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_create_event_response_time" time="0.011"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collections'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:401: in setup_test_db
    cursor = await test_db.list_collections()
E   AttributeError: 'async_generator' object has no attribute 'list_collections'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_concurrent_requests" time="0.020"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collections'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:401: in setup_test_db
    cursor = await test_db.list_collections()
E   AttributeError: 'async_generator' object has no attribute 'list_collections'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_resource_usage" time="0.015"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collections'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:401: in setup_test_db
    cursor = await test_db.list_collections()
E   AttributeError: 'async_generator' object has no attribute 'list_collections'</error></testcase><testcase classname="tests.performance.test_calendar_performance.TestCalendarPerformance" name="test_bulk_operations" time="0.018"><error message="failed on setup with &quot;AttributeError: 'async_generator' object has no attribute 'list_collections'&quot;">C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:304: in _asyncgen_fixture_wrapper
    result = event_loop.run_until_complete(setup())
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py:646: in run_until_complete
    return future.result()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\site-packages\pytest_asyncio\plugin.py:286: in setup
    res = await gen_obj.__anext__()
tests\conftest.py:401: in setup_test_db
    cursor = await test_db.list_collections()
E   AttributeError: 'async_generator' object has no attribute 'list_collections'</error></testcase><testcase classname="tests.services.test_calendar_agent" name="test_list_events" time="0.088"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'">src\calendar_tool_wrappers.py:374: in list_events_tool
    events = await calendar_service.list_events(
E   TypeError: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
src\services\calendar_agent.py:37: in run
    return await self._handle_list_events(user_id, provider)
src\services\calendar_agent.py:89: in _handle_list_events
    events = await list_events_tool(input)
src\calendar_tool_wrappers.py:410: in list_events_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:107: in test_list_events
    result = await run_calendar_agent(
src\services\calendar_agent.py:178: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to list events: mock_get_calendar_service.&lt;locals&gt;.GoogleServiceWrapper.list_events() got an unexpected keyword argument 'time_min'</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_find_free_slots" time="0.098"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'">src\calendar_tool_wrappers.py:426: in find_free_slots_tool
    slots = await calendar_service.find_free_slots(
tests\test_calendar_tool_wrappers_mongo.py:101: in find_free_slots
    return await self._service.find_free_slots(start_time=range_start, end_time=range_end, duration_minutes=duration_minutes)
E   TypeError: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'

During handling of the above exception, another exception occurred:
src\services\calendar_agent.py:39: in run
    return await self._handle_find_free_slots(text, user_id, provider)
src\services\calendar_agent.py:103: in _handle_find_free_slots
    slots = await find_free_slots_tool(input)
src\calendar_tool_wrappers.py:471: in find_free_slots_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:140: in test_find_free_slots
    result = await run_calendar_agent(
src\services\calendar_agent.py:178: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to find free slots: MockGoogleService.find_free_slots() got an unexpected keyword argument 'start_time'</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_create_event" time="0.062"><failure message="src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to create event: 'str' object has no attribute 'get'">src\calendar_tool_wrappers.py:515: in create_event_tool
    created_event = await calendar_service.create_event(
tests\test_calendar_tool_wrappers_mongo.py:113: in create_event
    if isinstance(result.get('start', {}).get('dateTime'), datetime):
E   AttributeError: 'str' object has no attribute 'get'

During handling of the above exception, another exception occurred:
src\services\calendar_agent.py:41: in run
    return await self._handle_create_event(text, user_id, provider)
src\services\calendar_agent.py:121: in _handle_create_event
    event = await create_event_tool(input)
src\calendar_tool_wrappers.py:544: in create_event_tool
    raise ToolExecutionError(error_msg)
E   src.core.exceptions.ToolExecutionError: Failed to create event: 'str' object has no attribute 'get'

During handling of the above exception, another exception occurred:
tests\services\test_calendar_agent.py:167: in test_create_event
    result = await run_calendar_agent(
src\services\calendar_agent.py:178: in run_calendar_agent
    return await agent.run(text, user_id, provider)
src\services\calendar_agent.py:53: in run
    raise ToolExecutionError(f"Failed to execute action: {str(e)}")
E   src.core.exceptions.ToolExecutionError: Failed to execute action: Failed to create event: 'str' object has no attribute 'get'</failure></testcase><testcase classname="tests.services.test_calendar_agent" name="test_update_event" time="0.103" /><testcase classname="tests.services.test_calendar_agent" name="test_delete_event" time="0.350" /><testcase classname="tests.services.test_calendar_agent" name="test_reschedule_event" time="0.082" /><testcase classname="tests.services.test_calendar_agent" name="test_cancel_event" time="0.090" /><testcase classname="tests.services.test_calendar_agent" name="test_invalid_provider" time="0.085" /><testcase classname="tests.services.test_calendar_agent" name="test_invalid_action" time="0.066" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_create" time="0.061" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_list" time="0.091" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_find_slots" time="0.075" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_update" time="0.076" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_delete" time="0.072" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_reschedule" time="0.056" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_ambiguous" time="0.069" /><testcase classname="tests.services.test_intent_detector" name="test_detect_intent_unknown" time="0.083" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_date" time="0.076" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_time" time="0.091" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_duration" time="0.085" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_attendees" time="0.106" /><testcase classname="tests.services.test_intent_detector" name="test_extract_entities_location" time="0.088" /><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_get_user_not_found" time="0.093"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_no_token" time="0.080"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_no_expiry" time="0.064"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_valid_token" time="0.084"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_expired_token" time="0.085"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_refresh_token_if_needed_refresh_error" time="0.061"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_from_api" time="0.065"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_for_api_create" time="0.082"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_format_event_for_api_update" time="0.050"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_validate_event_dates" time="0.082"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_calendars_success" time="0.057"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_calendars_api_error" time="0.082"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_list_events_success" time="0.071"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_create_event_success" time="0.066"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_get_event_success" time="0.078"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_update_event_success" time="0.090"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_delete_event_success" time="0.088"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_find_free_slots_success" time="0.098"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_calendar.TestMicrosoftCalendarClient" name="test_validate_free_slot_request" time="0.094"><error message="failed on setup with &quot;AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'&quot;">tests\services\test_ms_calendar.py:55: in calendar_client
    with patch("app.services.ms_calendar.TokenEncryption", return_value=mock_token_encryption):
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1437: in __enter__
    original, local = self.get_original()
C:\Users\Naman\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1410: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'app.services.ms_calendar' from 'D:\\Academics\\Personal Calendar Assistant\\app\\services\\ms_calendar.py'&gt; does not have the attribute 'TokenEncryption'</error></testcase><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_generate_auth_url" time="0.084" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_save_state" time="0.066" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_valid" time="0.099" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_invalid" time="0.101" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_validate_state_expired" time="0.094" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token" time="0.100" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token_error" time="0.064" /><testcase classname="tests.services.test_ms_oauth.TestMicrosoftOAuthService" name="test_get_token_user_not_found" time="0.489" /></testsuite></testsuites>