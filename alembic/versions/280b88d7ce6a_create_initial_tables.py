"""Create initial tables

Revision ID: 280b88d7ce6a
Revises: 
Create Date: 2025-05-30 17:59:07.280230

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '280b88d7ce6a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('working_hours_start', sa.Time(), nullable=True),
    sa.Column('working_hours_end', sa.Time(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('google_access_token', sa.String(), nullable=True),
    sa.Column('google_refresh_token', sa.String(), nullable=True),
    sa.Column('google_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('microsoft_id', sa.String(), nullable=True),
    sa.Column('microsoft_access_token', sa.String(), nullable=True),
    sa.Column('microsoft_refresh_token', sa.String(), nullable=True),
    sa.Column('microsoft_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_microsoft_id'), 'users', ['microsoft_id'], unique=True)
    op.create_table('calendar_actions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('GOOGLE', 'MICROSOFT', name='calendarprovider'), nullable=False),
    sa.Column('action_type', sa.Enum('LIST', 'CREATE', 'UPDATE', 'DELETE', 'AVAILABILITY', name='calendaractiontype'), nullable=False),
    sa.Column('event_id', sa.String(), nullable=True),
    sa.Column('event_summary', sa.String(), nullable=True),
    sa.Column('event_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_input', sa.Text(), nullable=True),
    sa.Column('provider_response', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_calendars',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('GOOGLE', 'MICROSOFT', name='calendarprovider'), nullable=False),
    sa.Column('calendar_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('is_selected', sa.Boolean(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_calendars')
    op.drop_table('calendar_actions')
    op.drop_index(op.f('ix_users_microsoft_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
